{{page-title "Engineering guidelines"}}
<h1 class="ds-h1">Consumer instructions</h1>

<div class="mt-8 prose prose-lg text-gray-800 pb-6">
  <p>There are multiple ways to use these icons in your codebase. The package can be installed as an
    <a href="#ember-flight-icons" class="ds-a">Ember addon</a>
    for the convenience of using a component with strong defaults, or
    <a href="#use-other" class="ds-a">it can be consumed</a>
    for direct import.</p>
</div>

<div class="mt-8 prose prose-lg text-gray-800 pb-6">
  <h2 class="ds-h2" id="accessibility"><a href="#accessibility" class="ds-a" rel="external">&sect;</a>
    Accessibility</h2>
  <p>
    Accessibility (a11y) support for SVGs is inconsistent across browsers and assistive technology. Currently, best
    practice is to set the
    <code class="ds-code">aria-hidden</code>
    attribute to false on the SVG itself. This means that the icon (both the singular icon and the icon component) will
    need to be used
    <em class="ds-em">in context</em>. The icons themselves are for presentation purposes only and should never be used
    on their own.
  </p>
  <p>However: As a
    <em>temporary</em>
    bridge while we work to provide the accessible components in the design system, we have provided the ability to add
    a title element to the Ember component by defining a value for the
    <code class="ds-code">@title</code>
    property. This is a temporary measure and we strongly encourage UI engineering teams to work with their designers
    and plan to convert any standalone icon use.
  </p>
</div>

<div class="mt-8 prose prose-lg text-gray-800 pb-6">
  <h3 class="ds-h3">Examples of correct use</h3>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code='
      <button aria-label="Check activity">
        <FlightIcon @name="activity" />
      </button>
    '
  />
  {{! prettier-ignore-end }}
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code='
      <h2>Activity report <FlightIcon @name="activity" /></h2>
    '
  />
  {{! prettier-ignore-end }}
</div>

<div class="mt-8 prose prose-lg text-gray-800 pb-6">
  <h2 class="ds-h2" id="ember-flight-icons"><a href="#ember-flight-icons" class="ds-a" rel="external">&sect;</a>
    Use in Ember apps</h2>
  <h3 class="ds-h3">Installation</h3>
  <p>To install, run:
    {{! prettier-ignore-start }}
    <CodeBlock @code="yarn add @hashicorp/ember-flight-icons" @language="bash" />
    {{! prettier-ignore-end }}
  </p>
  <p>Note:
    <code class="ds-code">ember-test-selectors</code>
    is a dependency added for the author's convenience.
    <a
      href="https://github.com/simplabs/ember-test-selectors"
      class="ds-a"
      target="_blank"
      rel="noopener noreferrer"
    >This Ember addon</a>
    strips out all
    <code class="ds-code">data-test-*</code>
    attributes for production builds.
  </p>
</div>

<div class="mt-8 prose prose-lg text-gray-800 pb-6">
  <h3 class="ds-h3" id="understanding"><a href="#understanding" class="ds-a" rel="external">&sect;</a>
    Understanding the component</h3>
  <p>The component comes with the following defaults:
    <ol>
      <li class="ds-li"><code class="ds-code">fill</code>
        attribute: set to currentColor</li>
      <li class="ds-li"><code class="ds-code">id</code>
        attribute: a unique, automatically generated id</li>
      <li class="ds-li"><code class="ds-code">aria-hidden</code>
        attribute: set to true</li>
      <li class="ds-li"><code class="ds-code">height</code>
        and
        <code class="ds-code">width</code>: default size of 16x16 (px)</li>
      <li class="ds-li"><code class="ds-code">stretched</code>: if the SVG should have 100% width/height (stretch to
        fill the parent) - defaults to "false"</li>
      <li class="ds-li">(CSS)
        <code class="ds-code">class</code>: flight-icon, flight-icon-NAME, flight-icon-display-inline</li>
      <li class="ds-li">CSS display: set to
        <code class="ds-code">display:inline-block</code></li>
      <li class="ds-li"><code class="ds-code">data-test-icon</code>
        attribute: for the author's testing convenience; set to the value of the
        <code class="ds-code">@name</code>
        property.</li>
    </ol>
  </p>

  <p>This makes the base, required invocation quite terse &mdash;
    <code class="ds-code">@name</code>
    is the only property that requires specification. So this invocation:
    {{! prettier-ignore-start }}
    <CodeBlock
      @language="markup"
      id="component-invocation-base"
      @code='
        <FlightIcon @name="alert-circle" />
      '
    />
    {{! prettier-ignore-end }}
  </p>

  <p>
    Renders to this (where the ID will be unique each time):
    {{! prettier-ignore-start }}
    <CodeBlock
      @language="markup"
      id="component-invocation-base-render"
      @code='
      <svg
        aria-hidden="true"
        class="flight-icon icon-alert-circle display-inline"
        data-test-icon="alert-circle"
        fill="currentColor"
        id="icon-ember115"
        width="16"
        height="16"
        viewBox="0 0 16 16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <use href="/@hashicorp/ember-flight-icons/icons/sprite.svg#alert-circle-16"></use>
      </svg>
    '
    />
    {{! prettier-ignore-end }}
  </p>
  <p>The
    <code class="ds-code">&lt;use></code>
    element will then render the correct svg to the shadow dom.</p>
</div>

<div class="mt-8 prose prose-lg text-gray-800 pb-6">
  <h3 class="ds-h3" id="customizable"><a href="#customizable" class="ds-a" rel="external">&sect;</a>
    Customizable properties</h3>
  <p>The following properties are customizable:
    <ol>
      <li>fill (the color)</li>
      <li>size (at this time, only 16 (default) and 24 are supported)</li>
      <li>stretched (true/false)</li>
      <li>display (inline-block or block)</li>
      <li>additional CSS classes</li>
    </ol>
  </p>
</div>

<div class="mt-8 prose prose-lg text-gray-800 pb-6">
  <h4 class="ds-h4">Examples</h4>
  <p id="example-fill">
    <strong>
      <a href="#example-fill" class="ds-a" rel="external">&sect;</a>
      Fill:
    </strong>
    To customize the fill attribute, set the
    <code class="ds-code">@color</code>
    value (multiple supported ways). The recommended approach to ensure consistency is to use one of the pre-defined
    variables:
    {{! prettier-ignore-start }}
    <CodeBlock
      @language="markup"
      @code='
        <FlightIcon @name="zap" @color="var(--brand)" />
      '
    />
    {{! prettier-ignore-end }}
  </p>
  <p>
    Other accepted values include named colors and color values themselves.
    {{! prettier-ignore-start }}
    <CodeBlock
      @language="markup"
      @code='
        <FlightIcon @name="zap" @color="rebeccapurple" />
      '
    />
    {{! prettier-ignore-end }}
    {{! prettier-ignore-start }}
    <CodeBlock
      @language="markup"
      @code='
        <FlightIcon @name="zap" @color="rgb(46, 113, 229)" />
      '
    />
    {{! prettier-ignore-end }}
  </p>

  <p id="example-size">
    <strong><a href="#example-size" class="ds-a" rel="external">&sect;</a>
      Size:</strong>
    To use the 24x24 (px) icon size, set the
    <code class="ds-code">@size</code>
    value:
    {{! prettier-ignore-start }}
    <CodeBlock
      @language="markup"
      @code='
        <FlightIcon @name="zap" @size="24" />
      '
    />
    {{! prettier-ignore-start }}
  </p>

  <p id="example-stretch">
    <strong><a href="#example-stretch" class="ds-a" rel="external">&sect;</a>
      Stretched:</strong>
    To have the icon fill the parent container (width: 100%, height: 100%, display: block), set the
    <code class="ds-code">@stretched</code>
    attribute:
    {{! prettier-ignore-start }}
    {{! template-lint-disable no-triple-curlies }}
    <CodeBlock
      @language="markup"
      @code={{{'
        <FlightIcon @name="zap" @size="24" @stretched={{true}} />
      '}}}
    />
    {{! template-lint-enable no-triple-curlies }}
    {{! prettier-ignore-start }}
  </p>

  <p id="example-styles">
    <strong><a href="#example-styles" class="ds-a" rel="external">&sect;</a>
      CSS classes:</strong>
    To append additional classes to the component, add
    <code class="ds-code">class</code>
    with value(s):
    {{! prettier-ignore-start }}
    <CodeBlock
      @language="markup"
      @code='
        <FlightIcon @name="triangle-fill" class="ds-rotate-90" />
      '
    />
    {{! prettier-ignore-end }}
  </p>
  <p id="example-display">
    <strong><a href="#example-display" class="ds-a" rel="external">&sect;</a>
      CSS display:</strong>
    To change the default display of
    <i>inline-block</i>
    to
    <i>block</i>, set
    <code class="ds-code">@isInlineBlock</code>
    to false:
    {{! prettier-ignore-start }}
    {{! template-lint-disable no-triple-curlies }}
    <CodeBlock
      @language="markup"
      @code={{{'
        <FlightIcon @name="triangle-fill" @isInlineBlock={{false}} />
      '}}}
    />
    {{! template-lint-enable no-triple-curlies }}
    {{! prettier-ignore-end }}
  </p>
</div>

<div class="mt-8 prose prose-lg text-gray-800 pb-6">
  <h2 class="ds-h2" id="use-other"><a href="#use-other" class="ds-a" rel="external">&sect;</a>
    Alternative @hashicorp/flight-icons package</h2>
  <p>
    It is also possible to install
    <code class="ds-code">@hashicorp/flight-icons</code>
    instead of
    <code class="ds-code">@hashicorp/ember-flight-icons</code>. To do so, run:
    {{! prettier-ignore-start }}
    <CodeBlock @language="bash" @code="yarn install @hashicorp/flight-icons" />
    {{! prettier-ignore-end }}
    This will allow single icons to be imported and used directly as SVG files:
    {{! template-lint-disable 'no-potential-path-strings' }}
    {{! prettier-ignore-start }}
    <CodeBlock
      @language="js"
      @code="
        const flightArrowRight = require('@hashicorp/flight-icons/svg/arrow-right-16.svg');

        // elsewhere in the file
        <InlineSvg src={flightArrowRight} />
      "
    />
    {{! prettier-ignore-end }}
    {{! template-lint-enable 'no-potential-path-strings' }}
    <em class="ds-em">Notice: the code above is an example, please update it accordingly to your codebase.</em>
  </p>
  <p>
    Authors should also follow the following guidelines:
    <ul class="ds-ul">
      <li class="ds-li">The icons are sized as 16x16(px) and 24x24(px) and should not be used at different sizes without
        a design consult.</li>
      <li class="ds-li">The icons do not have a unique id generated; authors should take precautions to avoid
        <a
          href="https://www.w3.org/TR/WCAG20-TECHS/F77.html"
          class="ds-a"
          target="_blank"
          rel="noopener noreferrer"
        >related accessibility conformance failures</a>.</li>
    </ul>
  </p>
</div>

<div class="mt-8 prose prose-lg text-gray-800 pb-6">
  <h2 class="ds-h2" id="size-existing">
    <a href="#migration" class="ds-a">§</a>
    Updating existing interfaces
  </h2>

  <ul>
    <li>
      We maintain
      <a
        href="https://github.com/hashicorp/flight/blob/main/structure-mappings.json"
        class="ds-a"
        target="_blank"
        rel="noopener noreferrer"
      >a mapping of icon names between Structure and Flight</a>
      that can be referenced to migrate an icon from Structure to Flight. It is also possible to write codemods to
      automate this migration. If you are interested in learning more, reach out in
      <a
        href="https://hashicorp.slack.com/archives/C7KTUHNUS"
        class="ds-a"
        target="_blank"
        rel="noopener noreferrer"
      >#team-design-systems</a>.
    </li>
  </ul>
</div>